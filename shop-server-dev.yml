server:
  port: 16020

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:18761/eureka/
  instance:
    status-page-url: http://${zuul.address}${zuul.api-url}swagger-ui.html

zuul:
  address: ${address:192.168.1.10:18765}
  api-url: ${api-url:/api/shop-server/}

logging:
  level:
    root: INFO
    
spring:
  cloud:
    stream:
      instanceIndex: 0
      instanceCount: 1
      bindings:
        payment_offline_output_channel: #线下订单支付通道
          destination: payment-offline
          group: payment
          binder: order_binder
        convenientOrderPaymentRequest: #便利服务订单支付通道
          destination: convenientOrderPayment
          group: payment
          binder: order_binder
        memberOrderPaymentRequest: #会员订单支付通道
          destination: memberOrderPayment
          group: payment
          binder: order_binder
        push_output_channel: #消息推送通道
          destination: topic-push
          group: push
          binder: order_binder
      binders:
        order_binder:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: rabbitmq
                port: 5672
                username: admin
                password: admin
                virtual-host: /
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: admin
    password: admin
    virtual-host: /
  redis:
    database: 0 # database name  
    host: redis # server host  
    password:   # server password  
    port: 6379    # connection port  
    pool: # pool settings ...
      max-idle: 150
      min-idle: 0
      max-active: 1000
      max-wait: -1
      
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none 
    
  # 配置数据源
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://mysql:3306/shop?characterEncoding=utf8
    username: root
    password: 123456
    driverClassName: com.mysql.jdbc.Driver
    schema: classpath:sql/schema.sql  # 结构文件
    initialize: false
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #  useGlobalDataSourceStat=true

feign:
  hystrix:
    enabled: false
captcha: # 验证码
  send-interval: 60      #下发间隔时间（单位：秒）
  expire: 900                 # 过期时间（单位：秒）
url:
  auth-server: http://auth:14000   #认证服务 
  
settings: #网店开关
  status: #开关状态初始值
    meituan: 0 #关闭
    wetool: 0 #开启

callback:
  ip: http://17604kc447.imwork.net

lefu:
  callback-url: http://shop:16020/payment/mobile/notifyCallback
  trade-url: http://61.50.130.246:18081/gateway/api/trade.htm
  query-url: http://61.50.130.246:18081/gateway/query.htm
  refund-url: http://61.50.130.246:18081/gateway/api/refund.htm